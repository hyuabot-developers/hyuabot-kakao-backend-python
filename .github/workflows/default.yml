name: Code Check and Test

on:
  push:
    branches-ignore: ["main", "production"]
  pull_request:
    branches: ["main"]
    types:
    - closed
  workflow_dispatch:

jobs:
  lint:
    runs-on: ["self-hosted", "X64"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: lint
      run: |
        python -m pip install --upgrade pip setuptools wheel
        set -e
        python -m pip install -U -e .[${REQUIREMENTS_FILE}]
    - name: Lint with flake8
      run: |
        python -m flake8 src tests

  typecheck:
    runs-on: ["self-hosted", "X64"]
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: typecheck
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -U -e .[${REQUIREMENTS_FILE}]
    - name: Type check with mypy
      run: |
        python -m mypy --no-color-output src tests

  test:
    runs-on: ["self-hosted", "X64"]
    needs: [lint, typecheck]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: test
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -U -e .[${REQUIREMENTS_FILE}]
    - name: Create pytest.ini
      run: |
        echo "[pytest]" > pytest.ini
        echo "env = " >> pytest.ini
        echo "    API_URL=${{ secrets.API_URL }}" >> pytest.ini
        echo "    SITE_DOMAIN=127.0.0.1" >> pytest.ini
        echo "    ENVIRONMENT=TESTING" >> pytest.ini
        echo "    CORS_HEADERS=[\"*\"]" >> pytest.ini
        echo "    CORS_ORIGINS=[\"http://localhost:3000\"]" >> pytest.ini
    - name: Create .env
      run: |
        echo "API_URL=${{ secrets.API_URL }}" > .env
        echo "SITE_DOMAIN=127.0.0.1" >> .env
        echo "ENVIRONMENT=TESTING" >> .env
        echo "CORS_HEADERS=[\"*\"]" >> .env
        echo "CORS_ORIGINS=[\"http://localhost:3000\", \"https://kakao.hyuabot.app\"]" >> .env
    - name: Test with pytest
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        python -m pytest -m 'not integration' -v --cov=src
